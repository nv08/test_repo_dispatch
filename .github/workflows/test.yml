name: Create Branch and Push Changes

on:
  repository_dispatch:
    types: [custom_event]

jobs:
  create-branch-and-push:
    runs-on: ubuntu-latest

    env:
      FIGMA_API_TOKEN: ${{ secrets.FIGMA_TOKEN }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set up Git
        run: |
          git config user.email "actions@github.com"
          git config user.name "GitHub Actions"

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y jq webp

      - name: Generate Unique Branch Name
        id: generate-branch-name
        run: |
          TIMESTAMP=$(date +'%Y%m%d%H%M%S')
          RANDOM_STRING=$(head /dev/urandom | tr -dc A-Za-z0-9 | head -c 5)
          BRANCH_NAME="new-branch-${TIMESTAMP}-${RANDOM_STRING}"
          echo "BRANCH_NAME=${BRANCH_NAME}" >> $GITHUB_ENV

      - name: Create Branch
        run: |
          git checkout main
          git pull origin main
          git checkout -b ${{env.BRANCH_NAME}}
          echo "${{ github.event.client_payload.custom_data }}" > a.txt

      - name: Run download and convert script
        run: |
          chmod +x ./.scripts/download_and_convert.sh
          FIGMA_API_TOKEN="${FIGMA_API_TOKEN}" ./.scripts/download_and_convert.sh

      - name: Push Branch
        run: |
          git add .
          git commit -m "Add file with custom data"
          git push origin ${{env.BRANCH_NAME}}

      - name: Create Pull Request
        uses: actions/github-script@v6
        with:
          script: |
            const { repo, owner } = context.repo;
            const timestamp = new Date().toLocaleString('en-US', {
              year: 'numeric',
              month: 'short',
              day: 'numeric',
              hour: 'numeric',
              minute: 'numeric',
              second: 'numeric'
            })
            const title = `Designs Updated <${timestamp}>`;
            const result = await github.rest.pulls.create({
              title: title,
              owner,
              repo,
              head: '${{ env.BRANCH_NAME }}',
              base: 'main',
            });
